{
	"openapi": "3.1.0",
	"info": {
		"version": "1.0.0",
		"title": "Streaming API",
		"summary": "Users and streams manager.",
		"description": "Server for managing users and streams."
	},
	"basePath": "/",
	"paths": {
		"/users": {
			"get": {
				"summary": "Get list of all users",
				"description": "Returns a list of all users",
				"operationId": "getAllUsers",
				"tags": ["User"],
				"parameters": [
					{
						"name": "live",
						"in": "query",
						"description": "Filter users by live status",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": "success",
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/User"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new user",
				"description": "Creates a new user with the provided information",
				"operationId": "createUser",
				"tags": ["User"],
				"requestBody": {
					"description": "User information to create",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": "success",
										"data": {
											"type": "object",
											"$ref": "#/components/schemas/User"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/users/{username}": {
			"get": {
				"summary": "Get user by username",
				"description": "Returns the user with the specified username",
				"operationId": "getUserByUsername",
				"tags": ["User"],
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "Username of the user to retrieve",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": "success",
										"data": {
											"type": "object",
											"$ref": "#/components/schemas/UserDetail"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete user",
				"description": "Deletes the user with the specified username",
				"operationId": "deleteUser",
				"tags": ["User"],
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "Username of the user to delete",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"put": {
				"summary": "Update user",
				"description": "Updates the user with the specified ID",
				"operationId": "updateUser",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "User information to update",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/users/{id}/inc": {
			"patch": {
				"summary": "Increase user count",
				"description": "Increments the count of the user with the specified ID",
				"operationId": "increaseCount",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User count increased successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/users/{id}/dec": {
			"patch": {
				"summary": "Decrease user count",
				"description": "Decrements the count of the user with the specified ID",
				"operationId": "decreaseCount",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User count decreased successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/users/live/{id}": {
			"patch": {
				"summary": "Update user live status",
				"description": "Updates the live status of the user with the specified ID",
				"operationId": "updateLive",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Live status information",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"live": {
										"type": "boolean"
									}
								},
								"required": ["live"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User live status updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/login": {
			"post": {
				"summary": "Checks user login credentials.",
				"description": "This method verifies if the given username and password are correct.",
				"operationId": "checkLogin",
				"tags": ["Login"],
				"requestBody": {
					"description": "User's login credentials",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginCredentials"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Login successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Wrong password",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Cannot find user with given username",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/streams": {
			"post": {
				"summary": "Create a new stream",
				"operationId": "createStream",
				"tags": ["Stream"],
				"requestBody": {
					"description": "Stream information",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"username": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								},
								"required": ["name", "username"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Stream created successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": "success",
										"data": {
											"type": "object",
											"$ref": "#/components/schemas/Stream"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/streams/{id}": {
			"get": {
				"summary": "Get stream by ID",
				"operationId": "getStreamById",
				"tags": ["Stream"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the stream to retrieve",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Stream retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": "success",
										"data": {
											"type": "object",
											"$ref": "#/components/schemas/StreamDetail"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Stream not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update stream by ID",
				"operationId": "updateStream",
				"tags": ["Stream"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the stream to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Updated stream information",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								},
								"required": ["name"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Stream updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Stream not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/streams/{streamPath}": {
			"delete": {
				"summary": "Delete stream by path",
				"operationId": "deleteStream",
				"tags": ["Stream"],
				"parameters": [
					{
						"name": "streamPath",
						"in": "path",
						"description": "Path of the stream folder to delete",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Stream deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Stream not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/streams/{streamPath}/exists": {
			"get": {
				"summary": "Check if stream source exists",
				"operationId": "streamSourceExists",
				"tags": ["Stream"],
				"parameters": [
					{
						"name": "streamPath",
						"in": "path",
						"description": "Path of the stream folder to check",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/streams/{streamPath}/end": {
			"put": {
				"summary": "End stream by path",
				"operationId": "endStream",
				"tags": ["Stream"],
				"parameters": [
					{
						"name": "streamPath",
						"in": "path",
						"description": "Path of the stream folder to end",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Stream ended successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "Stream not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"/password": {
			"put": {
				"summary": "Change password",
				"operationId": "changePassword",
				"tags": ["Password"],
				"requestBody": {
					"description": "User's credentials and new password",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChangePasswordRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Password changed successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (e.g., wrong password)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		},
		"*": {
			"get": {
				"summary": "Handle wildcard route",
				"description": "Endpoint to handle all undefined routes",
				"operationId": "handleWildcardRoute",
				"responses": {
					"404": {
						"description": "Path not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"LoginCredentials": {
				"type": "object",
				"required": ["username", "password"],
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string",
						"format": "password"
					}
				}
			},
			"SuccessfulResponse": {
				"type": "object",
				"properties": {
					"status": "success",
					"data": {
						"type": "boolean"
					}
				}
			},
			"Error": {
				"type": "object",
				"required": ["message"],
				"properties": {
					"status": "error",
					"error": {
						"type": "string"
					}
				}
			},
			"ChangePasswordRequest": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"oldPassword": {
						"type": "string",
						"format": "password"
					},
					"newPassword": {
						"type": "string",
						"format": "password"
					}
				},
				"required": ["username", "oldPassword", "newPassword"]
			},
			"UpdateUserRequest": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					}
				}
			},
			"CreateUserRequest": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": ["username", "email", "password"]
			},
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"count": {
						"type": "integer"
					},
					"streamKey": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"UserAvatar": {
				"type": "object",
				"properties": {
					"picture": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				}
			},
			"UserDetail": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"count": {
						"type": "integer"
					},
					"streamKey": {
						"type": "string",
						"format": "uuid"
					},
					"streams": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/StreamInfo"
						}
					}
				}
			},
			"Stream": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string",
						"format": "uuid"
					},
					"ended": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"StreamInfo": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string",
						"format": "uuid"
					},
					"ended": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					}
				}
			},
			"StreamDetail": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string",
						"format": "uuid"
					},
					"ended": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"user": {
						"type": "object",
						"$ref": "#/components/schemas/UserAvatar"
					}
				}
			}
		}
	}
}
